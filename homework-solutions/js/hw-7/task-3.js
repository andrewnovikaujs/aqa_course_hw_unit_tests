/*
  digitalRoot
  Напишите рекурсивную функцию, которая принимает на вход число и складывает его цифры. 
  Если сумма получилась больше 9 - снова сложите цифры.
  И так пока, сумма не станет меньше либо равной 9. 
  После окончания сложений возвращает полученное число.
  Например при подаче числа 19 (1+9=10>9, потому 1+0=1) выводится 1

*/

function digitalRoot(number) {
  if (number <= 9) {
    return number;
  } else {
    let sum = 0;
    while (number > 0) {
      sum += number % 10;
      number = Math.floor(number / 10);
    }
    return digitalRoot(sum);
  }
}

console.log(digitalRoot(32432));

export { digitalRoot };


/*
Пошаговый разбор для числа 32432:
Вызов digitalRoot(32432):

Проверяем, больше ли 32432, чем 9. Да, больше. Идем дальше.
Создаем переменную sum, которая будет хранить сумму цифр числа. Инициализируем её значением 0.

Входим в цикл while, который будет выполняться, пока число больше 0:

Итерация 1:
Число: 32432, sum = 0.
Находим последнюю цифру числа: 32432 % 10 = 2.
Добавляем её к sum: sum = 0 + 2 = 2.
Убираем последнюю цифру из числа: Math.floor(32432 / 10) = 3243.
Число становится 3243.
Итерация 2:
Число: 3243, sum = 2.
Находим последнюю цифру числа: 3243 % 10 = 3.
Добавляем её к sum: sum = 2 + 3 = 5.
Убираем последнюю цифру из числа: Math.floor(3243 / 10) = 324.
Число становится 324.
Итерация 3:
Число: 324, sum = 5.
Находим последнюю цифру числа: 324 % 10 = 4.
Добавляем её к sum: sum = 5 + 4 = 9.
Убираем последнюю цифру из числа: Math.floor(324 / 10) = 32.
Число становится 32.
Итерация 4:
Число: 32, sum = 9.
Находим последнюю цифру числа: 32 % 10 = 2.
Добавляем её к sum: sum = 9 + 2 = 11.
Убираем последнюю цифру из числа: Math.floor(32 / 10) = 3.
Число становится 3.
Итерация 5:
Число: 3, sum = 11.
Находим последнюю цифру числа: 3 % 10 = 3.
Добавляем её к sum: sum = 11 + 3 = 14.
Убираем последнюю цифру из числа: Math.floor(3 / 10) = 0.
Число становится 0, цикл завершен.
После завершения цикла, переменная sum равна 14.

Теперь вызываем рекурсивно функцию для суммы: digitalRoot(14).

Пошаговый разбор для числа 14 (из рекурсии):
Вызов digitalRoot(14):

Проверяем, больше ли 14, чем 9. Да, больше. Идем дальше.
Создаем переменную sum, которая будет хранить сумму цифр числа. Инициализируем её значением 0.

Входим в цикл while, который будет выполняться, пока число больше 0:

Итерация 1:
Число: 14, sum = 0.
Находим последнюю цифру числа: 14 % 10 = 4.
Добавляем её к sum: sum = 0 + 4 = 4.
Убираем последнюю цифру из числа: Math.floor(14 / 10) = 1.
Число становится 1.
Итерация 2:
Число: 1, sum = 4.
Находим последнюю цифру числа: 1 % 10 = 1.
Добавляем её к sum: sum = 4 + 1 = 5.
Убираем последнюю цифру из числа: Math.floor(1 / 10) = 0.
Число становится 0, цикл завершен.
После завершения цикла, переменная sum равна 5.

Теперь вызываем рекурсивно функцию для суммы: digitalRoot(5).

Пошаговый разбор для числа 5 (из рекурсии):
Вызов digitalRoot(5):
Проверяем, меньше ли 5 или равно 9. Да, меньше или равно 9.
Возвращаем число 5.
Итоговый результат:
После всех рекурсивных вызовов и вычислений, результат для числа 32432 равен 5.
Вывод:
Результат вызова console.log(digitalRoot(32432)); будет 5.

Заключение:
В процессе работы функции мы последовательно складывали цифры числа и повторяли операцию до тех пор, пока не получили число, которое меньше или равно 9.
*/
